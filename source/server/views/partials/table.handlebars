<div class="container py-5 text-center mx-auto">
    <h2 class="text-center text-light mx-auto my-5">Listado de todos los anime</h2>
    <section class="d-flex justify-content-center">
        <div id="scrollme">
            <table class="table table-light table-striped my-5">
                <thead class="text-center">
                    <tr class="text-center mx-auto">
                        <th scope="col">ID</th>
                        <th class="text-start" scope="col">Nombre</th>
                        <th scope="col">Genero</th>
                        <th scope="col">Año</th>
                        <th scope="col">Autor</th>
                        <th scope="col">Detalles</th>
                        <th scope="col">Actualizar</th>
                        <th scope="col">Eliminar</th>
                    </tr>
                </thead>
                <tbody>
                    {{#each data}}
                    <tr>
                        <th scope="row">{{this.id}}</th>
                        <td>{{this.nombre}}</td>
                        <td>{{this.genero}}</td>
                        <td>{{this.año}}</td>
                        <td>{{this.autor}}</td>
                        <td><a class="btn detailBtn" href="/animes/{{this.id}}">Detalles</a></td>
                        <td><a class="btn updateBtn">Actualizar</a></td>
                        <td><button class="btn deleteBtn">Eliminar</button></td>
                    </tr>
                    {{/each}}
                </tbody>
            </table>
        </div>
    </section>

    <div class="text-center my-5">
        <button type="submit" id="formShow" class="btn">Crear</button>
    </div>
</div>

<script>
    const updateBtn = document.querySelectorAll(".updateBtn");
    const deleteBtn = document.querySelectorAll(".deleteBtn");
    const detailBtn = document.querySelectorAll(".detailBtn");

    let id;

    formShow.addEventListener('click', () => {
        form.classList.replace('d-none', 'd-block');
        formShow.classList.replace('d-block', 'd-none');
        updateForm.classList.replace('d-block', 'd-none');
        createForm.classList.replace('d-none', 'd-block');
        formCreateUser.reset();
    })
    //Actualizamos Anime
    for (let i = 0; i < updateBtn.length; i++) {
        updateBtn[i].addEventListener('click', (event) => {

            form.classList.replace('d-none', 'd-block');
            createForm.classList.replace('d-block', 'd-none')
            updateForm.classList.replace('d-none', 'd-block')
            formShow.classList.replace('d-none', 'd-block')

            let path = event.srcElement.offsetParent.nextSibling.parentElement.cells;

            id = path[0].innerText
            createNombre.value = path[1].innerText;
            createGenero.value = path[2].innerText;
            createAño.value = path[3].innerText;
            createAutor.value = path[4].innerText;
        });
    }
    //Borramos Anime
    for (let i = 0; i < deleteBtn.length; i++) {
        deleteBtn[i].addEventListener("click", (event) => {

            let path = event.srcElement.offsetParent.nextSibling.parentElement.cells;
            let id = path[0].innerText;

            var requestOptions = {
                method: 'DELETE',
                redirect: 'follow'
            };

            fetch("http://localhost:3000/animes/" + id, requestOptions)
                .then(response => {
                    if (response.status === 200) {
                        return response.json();
                    } else {
                        throw new Error("Error al eliminar");
                    }
                })
                .then(result => {
                    alert(result.message);
                    location.reload();
                })
                .catch(error => {
                    console.error(error.message);
                });
        });
    }

    //Detalles de anime
    for (let i = 0; i < detailBtn.length; i++) {
        detailBtn[i].addEventListener("click", (event) => {

            let path = event.srcElement.offsetParent.nextSibling.parentElement.cells
            let id = path[0].innerText;

            var requestOptions = {
                method: 'GET',
                redirect: 'follow'
            };

            fetch(`http://localhost:3000/animes/${id}`, requestOptions)
                .then(response => response.json())
                .then(result => console.log(result))
                .catch(error => console.log('error', error));
        });
    }
</script>

<style>
    .table {
        box-shadow: 7px 7px 5px 0px rgb(172, 171, 171);
        -webkit-box-shadow: 7px 7px 5px 0px rgb(167, 166, 166);
        -moz-box-shadow: 7px 7px 5px 0px rgb(155, 154, 154);
    }

    .detailBtn {
        background-color: #BFFFBF;
    }

    .updateBtn {
        background-color: #B3D9FF;
    }

    .deleteBtn {
        background-color: #FFB3BB;
    }

    #formShow {
        background-color: rgb(226, 55, 140);
        color: white;
    }

    #formShow:hover {
        background-color: rgb(228, 145, 186);
        color: black;
    }

    @media(max-width: 768px) {
        #scrollme {
            overflow-x: scroll;
            width: 500px;
        }
    }

    @media(max-width: 630px) {
        #scrollme {
            overflow-x: scroll;
            width: 350px;
        }
    }
</style>